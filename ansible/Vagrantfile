# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.provider "virtualbox" do |global_vbox|
    global_vbox.customize ["modifyvm", :id, "--graphicscontroller", "none"]
    global_vbox.customize ["modifyvm", :id, "--audio", "none"]
    global_vbox.memory = 8192
    global_vbox.cpus = 6
  end
  
  config.vm.provision "shell" do |bootstrap_packages|
    bootstrap_packages.name = "Installing Ansible"
    bootstrap_packages.privileged = true
    bootstrap_packages.inline = <<-SHELL
      dnf --assumeyes install ansible
    SHELL
  end

  config.vm.provision "file" do |bootstrap_copy_ansible_config|
    bootstrap_copy_ansible_config.source = "zucchini-configs/ansible"
    bootstrap_copy_ansible_config.destination = "/tmp/ansible"
  end

  config.vm.provision "file" do |bootstrap_copy_ansible_role|
    bootstrap_copy_ansible_role.source = "zucchini-ansible/playbooks"
    bootstrap_copy_ansible_role.destination = "/tmp/ansible/playbooks"
  end
  
  config.vm.provision "file" do |bootstrap_copy_ansible_role|
    bootstrap_copy_ansible_role.source = "zucchini-ansible/roles"
    bootstrap_copy_ansible_role.destination = "/tmp/ansible/roles"
  end

  config.vm.provision "file" do |bootstrap_copy_ansible_vars|
    bootstrap_copy_ansible_vars.source = "zucchini-configs/ansible/vars/base_config.yml"
    bootstrap_copy_ansible_vars.destination = "/tmp/ansible/roles/zucchini-base/vars/main.yml"
  end

  config.vm.provision "file" do |bootstrap_copy_keys|
    bootstrap_copy_keys.source = "zucchini-configs/keys"
    bootstrap_copy_keys.destination = "~/keys"
  end

  config.vm.provision "shell" do |bootstrap_ssh_keys|
    bootstrap_ssh_keys.name = "Copying GitHub deploy keys"
    bootstrap_ssh_keys.privileged = false
    bootstrap_ssh_keys.inline = <<-SHELL
      cp -r ${HOME}/keys/github/* ${HOME}/.ssh
    SHELL
  end    

  config.vm.provision "shell" do |bootstrap_ansible_setup|
    bootstrap_ansible_setup.name = "Setting up Ansible config"
    bootstrap_ansible_setup.privileged = false
    bootstrap_ansible_setup.inline = <<-SHELL
      ln -sf /tmp/ansible/config/local.cfg /tmp/ansible/ansible.cfg
    SHELL
  end

  config.vm.provision "ansible_local" do |bootstrap_ansible|
    bootstrap_ansible.install = false
    bootstrap_ansible.become = true
    bootstrap_ansible.provisioning_path = "/tmp/ansible"
    bootstrap_ansible.inventory_path = "/tmp/ansible/inventory/dev"
    bootstrap_ansible.config_file = "/tmp/ansible/config/local.cfg"
    bootstrap_ansible.extra_vars = "/tmp/ansible/vars/base_config.yml"
    bootstrap_ansible.playbook = "/tmp/ansible/playbooks/provisioning/zucchini-ansible.yml"
  end

  config.vm.provision "shell" do |bootstrap_cleanup|
    bootstrap_cleanup.name = "Final cleanup and we're done"
    bootstrap_cleanup.privileged = false        
    bootstrap_cleanup.inline = <<-SHELL
      rm -rf /tmp/ansible
      rm -rf ${HOME}/keys
    SHELL
  end

  config.vm.define "ansiblesys" do |node|
    node.vm.synced_folder ".", "/vagrant", disabled: true
    node.vm.box = "zucchini/base-centos-8"
    node.vm.hostname = "ansiblesys"
    config.vm.provider "virtualbox" do |node_vbox|
      node_vbox.name = "ansiblesys"
    end
  end
end